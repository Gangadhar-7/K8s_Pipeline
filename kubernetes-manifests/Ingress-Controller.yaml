
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: aws-load-balancer-controller
#   labels:
#     app: frontend
#   annotations:
#     # Ingress Core Settings  
#     kubernetes.io/ingress.class: "alb"
#     # Load Balancer Name
#     alb.ingress.kubernetes.io/load-balancer-name: aws-load-balancer-controller
#     alb.ingress.kubernetes.io/scheme: internet-facing
#     # Health Check Settings
#     alb.ingress.kubernetes.io/healthcheck-protocol: HTTP 
#     alb.ingress.kubernetes.io/healthcheck-port: traffic-port
#     alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
#     alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
#     alb.ingress.kubernetes.io/success-codes: '200'
#     alb.ingress.kubernetes.io/healthy-threshold-count: '2'
#     alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
#     ## SSL Settings
#     alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}, {"HTTP":80}]'
#     alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:961166189364:certificate/d94229bb-8eff-4b87-96d8-ab253780987e
#     #alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS-1-1-2017-01 #Optional (Picks default if not used)    
#     # SSL Redirect Setting
#     alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'   
#     # External DNS - For creating a Record Set in Route53
#     external-dns.alpha.kubernetes.io/hostname: projectk8s.gangadharrecruitcrm.shop     
# spec:
#   ingressClassName: my-aws-ingress-class # Ingress Class
#   rules:
#     - host: projectk8s.gangadharrecruitcrm.shop
#       http:
#         paths:           
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: frontend-service
#                 port:
#                   number: 80






















# # apiVersion: networking.k8s.io/v1
# # kind: Ingress
# # metadata:
# #   name: my-aws-ingress-class
# #   labels:
# #     app: aws-load-balancer-controller
# #   annotations:
# #     # Ingress Core Settings
# #     kubernetes.io/ingress.class: my-aws-ingress-class
# #     my-aws-ingress-class.ingress.kubernetes.io/scheme: internet-facing
# #     # Health Check Settings
# #     my-aws-ingress-class.ingress.kubernetes.io/healthcheck-protocol: HTTP 
# #     my-aws-ingress-class.ingress.kubernetes.io/healthcheck-port: traffic-port
# #     my-aws-ingress-class.ingress.kubernetes.io/healthcheck-path: /
# #     my-aws-ingress-class.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
# #     my-aws-ingress-class.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
# #     my-aws-ingress-class.ingress.kubernetes.io/success-codes: '200'
# #     my-aws-ingress-class.ingress.kubernetes.io/healthy-threshold-count: '2'
# #     my-aws-ingress-class.ingress.kubernetes.io/unhealthy-threshold-count: '2'
# # spec:
# #   rules:
# #     - host: k8s.gangadharrecruitcrm.shop
# #       http:
# #         paths:
# #           - path: /*
# #             backend:
# #               serviceName: frontend-service
# #               servicePort: 80

# # apiVersion: networking.k8s.io/v1
# # kind: Ingress
# # metadata:
# #   name: my-nginx-controller-ingress-nginx-controller
  
# # spec:
# #   ingressClassName: nginx
# #   rules:
# #     - host: k8s.gangadharrecruitcrm.shop
# #       http:
# #         paths:
# #           - pathType: Prefix
# #             backend:
# #               service:
# #                 name: frontend-service
# #                 port:
# #                   number: 80
# #             path: /